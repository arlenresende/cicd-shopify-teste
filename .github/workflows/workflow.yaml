name: Atualizar Branches de Teste
on:
  push:
    branches:
      - main

jobs:
  atualizar-branches-de-teste:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout do código-fonte
      uses: actions/checkout@v2

    - name: Configurar Git
      run: |
        git config --global user.email "arlenaraujo12@gmail.com"
        git config --global user.name "arlenresende"

    - name: Configurar rebase para pull
      run: git config pull.rebase true

    - name: Verificar e descartar arquivos não rastreados (main)
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas
        if git status --porcelain | grep "^\?\?"; then
          git clean -f -d  # Descarte os arquivos não rastreados
        fi

    - name: Usar o Token de Acesso Pessoal (testa)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas
        if git show-ref --quiet refs/remotes/origin/testa; then
          git checkout testa
          git pull origin main  # Atualize a branch testa com a main usando rebase
          git rm -r --cached pastab  # Remova a pastab da branch testa
          git commit -m "Remover a pastab da branch testa"
          git push origin testa --force
        else
          echo "A branch 'testa' não existe no repositório."
        fi

    - name: Verificar e descartar arquivos não rastreados (testa)
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas
        if git status --porcelain | grep "^\?\?"; then
          git clean -f -d  # Descarte os arquivos não rastreados
        fi

    - name: Usar o Token de Acesso Pessoal (testb)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas
        if git show-ref --quiet refs/remotes/origin/testb; then
          git checkout testb
          git pull origin main  # Atualize a branch testb com a main usando rebase
          git rm -r --cached pastab  # Remova a pastab da branch testb
          git commit -m "Remover a pastab da branch testb"
          git push origin testb --force
        else
          echo "A branch 'testb' não existe no repositório."
        fi

    - name: Verificar e descartar arquivos não rastreados (testb)
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas
        if git status --porcelain | grep "^\?\?"; then
          git clean -f -d  # Descarte os arquivos não rastreados
        fi
