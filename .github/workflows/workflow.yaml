name: Atualizar Branches de Teste
on:
  push:
    branches:
      - main

jobs:
  atualizar-branches-de-teste:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código-fonte
      uses: actions/checkout@v2

    - name: Configurar Git
      run: |
        git config --global user.email "arlenaraujo12@gmail.com"
        git config --global user.name "arlenresende"

    - name: Verificar e criar a branch br1 se não existir
      run: |
        # Verifique se a branch br1 existe
        if ! git show-ref --quiet refs/remotes/origin/br1; then
          git checkout -b br1
          git push origin br1
        fi

    - name: Verificar e criar a branch br2 se não existir
      run: |
        # Verifique se a branch br2 existe
        if ! git show-ref --quiet refs/remotes/origin/br2; then
          git checkout -b br2
          git push origin br2
        fi

    - name: Limpar branch br1
      run: |
        git checkout br1
        git pull origin main  # Atualize a branch br1 com a main usando rebase
        git ls-files | grep -v -E '^pastab/|^\.github/' | xargs rm
        git commit -am "Limpar branch br1"
        git push origin br1

    - name: Limpar branch br2
      run: |
        git checkout br2
        git pull origin main  # Atualize a branch br2 com a main usando rebase
        git ls-files | grep -v -E '^pastab/|^\.github/' | xargs rm
        git commit -am "Limpar branch br2"
        git push origin br2

    - name: Usar o Token de Acesso Pessoal
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git fetch --all  # Certifique-se de buscar todas as branches remotas

        # Envie as alterações para as branches br1 e br2
        git push origin br1
        git push origin br2
