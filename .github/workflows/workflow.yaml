name: Atualizar Branches de Teste
on:
  push:
    branches:
      - main

jobs:
  atualizar-branches-de-teste:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código-fonte
      uses: actions/checkout@v2

    - name: Configurar Git
      run: |
        git config --global user.email "arlenaraujo12@gmail.com"
        git config --global user.name "arlenresende"

    - name: Configurar rebase para pull
      run: git config pull.rebase true

    - name: Atualizar branch br1
      run: |
        # Certifique-se de que a branch br1 existe no repositório
        if ! git show-ref --quiet refs/remotes/origin/br1; then
          git branch br1
          git push origin br1
        fi

        # Certifique-se de estar na branch br1
        git checkout br1

        # Limpe a branch br1, mantendo apenas pastab e .github
        git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git rm --cached

        # Faça o commit das alterações
        git commit -m "Limpar branch br1"

        # Verifique se a branch main existe
        if git show-ref --quiet refs/remotes/origin/main; then
          git checkout main

          # Copie todos os arquivos da branch main, exceto pastab e .github
          git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git checkout main --

          # Faça o commit das alterações
          git commit -m "Atualizar branch br1 com arquivos da main"
        fi

        # Empurre as alterações para a branch br1
        git push origin br1

    - name: Atualizar branch br2
      run: |
        # Certifique-se de que a branch br2 existe no repositório
        if ! git show-ref --quiet refs/remotes/origin/br2; then
          git branch br2
          git push origin br2
        fi

        # Certifique-se de estar na branch br2
        git checkout br2

        # Limpe a branch br2, mantendo apenas pastab e .github
        git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git rm --cached

        # Faça o commit das alterações
        git commit -m "Limpar branch br2"

        # Verifique se a branch main existe
        if git show-ref --quiet refs/remotes/origin/main; then
          git checkout main

          # Copie todos os arquivos da branch main, exceto pastab e .github
          git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git checkout main --

          # Faça o commit das alterações
          git commit -m "Atualizar branch br2 com arquivos da main"
        fi

        # Empurre as alterações para a branch br2
        git push origin br2

    - name: Usar o Token de Acesso Pessoal
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Certifique-se de buscar todas as branches remotas
        git fetch --all

        # Empurre as branches br1 e br2 atualizadas para o repositório remoto
        git push origin br1
        git push origin br2


