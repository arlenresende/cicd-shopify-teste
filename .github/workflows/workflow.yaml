name: Atualizar Branches de Teste
on:
  push:
    branches:
      - main

jobs:
  atualizar-branches-de-teste:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código-fonte
      uses: actions/checkout@v2

    - name: Configurar Git
      run: |
        git config --global user.email "arlenaraujo12@gmail.com"
        git config --global user.name "arlenresende"

    - name: Configurar rebase para pull
      run: git config pull.rebase true

    - name: Atualizar branch b1
      run: |
        # Certifique-se de que a branch b1 existe no repositório
        if ! git show-ref --quiet refs/remotes/origin/b1; then
          git branch b1
          git push origin b1
        fi

        # Certifique-se de estar na branch b1
        git checkout b1

        # Limpe a branch b1, mantendo apenas pastab e .github
        git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git rm --cached

        # Faça o commit das alterações
        git commit -m "Limpar branch b1"

        # Verifique se a branch main existe
        if git show-ref --quiet refs/remotes/origin/main; then
          git checkout main

          # Copie todos os arquivos da branch main, exceto pastab e .github
          git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git checkout main --

          # Faça o commit das alterações
          git commit -m "Atualizar branch b1 com arquivos da main"
        fi

        # Empurre as alterações para a branch b1
        git push origin b1

    - name: Atualizar branch b2
      run: |
        # Certifique-se de que a branch b2 existe no repositório
        if ! git show-ref --quiet refs/remotes/origin/b2; then
          git branch b2
          git push origin b2
        fi

        # Certifique-se de estar na branch b2
        git checkout b2

        # Limpe a branch b2, mantendo apenas pastab e .github
        git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git rm --cached

        # Faça o commit das alterações
        git commit -m "Limpar branch b2"

        # Verifique se a branch main existe
        if git show-ref --quiet refs/remotes/origin/main; then
          git checkout main

          # Copie todos os arquivos da branch main, exceto pastab e .github
          git ls-files --cached --full-name | grep -v 'pastab/' | grep -v '.github/' | xargs git checkout main --

          # Faça o commit das alterações
          git commit -m "Atualizar branch b2 com arquivos da main"
        fi

        # Empurre as alterações para a branch b2
        git push origin b2

    - name: Usar o Token de Acesso Pessoal
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Certifique-se de buscar todas as branches remotas
        git fetch --all

        # Empurre as branches b1 e b2 atualizadas para o repositório remoto
        git push origin b1
        git push origin b2

        
